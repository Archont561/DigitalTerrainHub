---
import * as Flow from "@astropub/flow";
import { DjangoURLs } from "@assets";
import { GridLayout } from "@layouts";

export interface Props extends Astro.HTMLComponentProps<"li"> {
    workspace?: DjangoAPI.Workspace;
    thumbnails?: string[];
}

const { 
    thumbnails = [] as string[], 
    workspace = {} as DjangoAPI.Workspace,
    ...props
} = Astro.props;

const getThumbnailUrl = (filename: string) => 
    `${DjangoURLs.api.pyodm.workspaces(workspace?.uuid).images(filename).self()}?thumbnails`;
---

<GridLayout cols="3" cellsPlacement="center" gap="4" newCellAutoPlacement="row"
    class="p-4 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track-gray-100"
    {...props}
>
    <Flow.When test={!workspace || thumbnails.length === 0}>
        <div class="text-center text-base-content">NO IMAGES</div>
        <Fragment slot="else">
            <Flow.For of={thumbnails}>{thumbnail =>
                <div
                    class="card size-full bg-base-100 shadow-md hover:scale-102 transition-transform duration-300 cursor-pointer"
                    @click="currentImage = $find.from($el)('img').src">
                    <figure class="overflow-hidden rounded-t-lg">
                        <img
                            src={getThumbnailUrl(thumbnail)}
                            alt={`Thumbnail ${thumbnail}`}
                            class="size-full object-cover transition-transform duration-300 hover:scale-110"
                        />
                    </figure>
                    <div class="card-body p-2 text-center">
                        <p class="text-sm font-medium text-base-content truncate">
                            {thumbnail}
                        </p>
                    </div>
                </div>
            }</Flow.For>
        </Fragment>
    </Flow.When>
</GridLayout>
