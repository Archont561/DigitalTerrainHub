---
import type { ComponentProps } from "astro/types";
import type { GridProps } from "./types";
import { getGridCSSVariables, getAlpineMediaPluginAttributes, getGridStyles } from "./utils";
import { mergeClass } from "@utils";
import { MeltLayout } from "@layouts";

export type Props = GridProps &
  Astro.ComponentProps &
  ComponentProps<typeof MeltLayout>;

const {
  inline,
  subgrid,
  cols,
  rows,
  gap,
  contentPlacement,
  cellsPlacement,
  newColSize,
  newRowSize,
  newCellAutoPlacement,
  class: className,
  style,
  ...props
} = Astro.props;

const gridClasses = mergeClass(className, inline ? "inline-grid" : "grid", {
  "grid-cols-subgrid": subgrid && subgrid !== "row",
  "grid-rows-subgrid": subgrid && subgrid !== "col",
  "grid-rows-(--grid-rows)": subgrid !== "row" && rows,
  "grid-cols-(--grid-cols)": subgrid !== "col" && cols,
  "gap-(--grid-gap)": gap,
  "place-content-(--place-content)": contentPlacement,
  "place-items-(--place-items)": cellsPlacement,
  "auto-rows-(--auto-rows)": newRowSize,
  "auto-cols-(--auto-cols)": newColSize,
  "grid-flow-(--grid-flow)": newCellAutoPlacement,
});

const { baseVariables, mediaVariables } = getGridCSSVariables({
  cols,
  rows,
  gap,
  contentPlacement,
  cellsPlacement,
  newColSize,
  newRowSize,
  newCellAutoPlacement,
});
---

<MeltLayout
  {...getAlpineMediaPluginAttributes({ mediaVariables, baseVariables })}
  {...props}
  class={gridClasses}
  style={getGridStyles(style, baseVariables)}
>
  <slot />
</MeltLayout>
