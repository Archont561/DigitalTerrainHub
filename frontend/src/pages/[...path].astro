---
import * as Page from "./index";
import * as Component from "../components";

let ComponentToRender = Page.NotFound;
let props = {};
Astro.response.status = 404;

await (async () => {
    type AstroRenderFn = (props: any) => {};

    if (Astro.request.method === "POST") {
        try {
            props = await Astro.request.json();
        } catch (err) {
            console.error("Failed to parse request body:", err);
        }
    }
    const path = (Astro.params.path || "")
        .toLowerCase()
        .split("/")
        .filter(Boolean)
        .join(".");

    const renderMap = {
        "page.home": Page.Home,
        "page.profile": Page.Profile,
        "page.credentials.login": Page.Login,
        "page.credentials.register": Page.Register,
        "component.workspace.list": Component.Workspace.List,
        "component.workspace.partial": Component.Workspace.Partial,
        "component.workspace.imagecountpartial": Component.Workspace.ImageCountPartial,
        "component.workspace.thumbnailgallery": Component.Workspace.ThumbnailGallery,
        "component.task.list": Component.Task.List,
        "component.task.partial": Component.Task.Partial,
        "component.preset.list": Component.Preset.List,
        "component.preset.partial": Component.Preset.Partial,
    } as Record<string, AstroRenderFn>;

    if (renderMap[path]) {
        ComponentToRender = renderMap[path];
        Astro.response.status = 200;
    }
})();
---

<ComponentToRender {...props} />
