---
import type { ComponentProps } from "astro/types";
import type { GridCellProps } from "./types";
import { getGridCSSVariables } from "./utils";
import { clsx as mergeCSSClasses } from "clsx";
import Layout from "@layouts";

export type Props = GridCellProps &
  Astro.ComponentProps &
  ComponentProps<typeof Layout.Melt>;

const {
  placement,
  colStart,
  colSpan,
  colEnd,
  rowStart,
  rowSpan,
  rowEnd,
  class: className,
  style,
  ...props
} = Astro.props;

const gridCellClasses = mergeCSSClasses(
  className,
  "astro-responsive-grid-cell",
  {
    "col-start-(--col-start)": colStart,
    "col-span-(--col-span)": colSpan,
    "col-end-(--col-end)": colEnd,
    "row-start-(--row-start)": rowStart,
    "row-span-(--row-span)": rowSpan,
    "row-end-(--row-end)": rowEnd,
    "place-self-(--place-self)": placement,
  },
);

const gridCellStyles = mergeCSSClasses(
  style,
  getGridCSSVariables({
    props: {
      placement,
      colStart,
      colSpan,
      colEnd,
      rowStart,
      rowSpan,
      rowEnd,
    },
    asInlineStyle: true,
  }),
);
---

<Layout.Melt class={gridCellClasses} {...props} style={gridCellStyles}>
  <slot />
</Layout.Melt>
