---
export const partial = true;

import { Window, type Element as HappyElement } from "happy-dom";
import _ from "lodash";

export interface Props extends Astro.ComponentProps {
    melt?: boolean;
}

const { melt, ...attributes } = Astro.props;

const setAttributes = (
    element: HappyElement,
    attrs: Record<string, unknown>,
) => {
    _.forEach(attrs, (value, key) => {
        if (element.hasAttribute(key)) {
            const existing = element.getAttribute(key) ?? "";
            const appended = existing ? `${existing} ${value}` : String(value);
            element.setAttribute(key, appended);
        } else {
            element.setAttribute(key, value as any);
        }
    });
};

const document = new new Window().Document();
const root = document.createElement("div");
if (Astro.slots.has('default')) {
    root.innerHTML = await Astro.slots.render("default");
}

let html = "";
if (!melt) {
    setAttributes(root, attributes);
    html = root.outerHTML;
} else {
    const firstElem = root.firstElementChild;
    firstElem && setAttributes(firstElem, attributes);
    html = root.innerHTML;
}
---

<Fragment set:html={html} />
