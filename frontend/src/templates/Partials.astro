---
export const partial = true;
type AstroRenderFn = (_props: any) => {};
const modules: Record<string, AstroRenderFn> = import.meta.glob([
  "@components/{workspace,task,preset,notifications}/**/*.astro",
], { eager: true });

const componentMap: Record<string, AstroRenderFn> = {};

function normalizePath(filePath: string): string {
    return filePath
        .replace(/^.*\/components\//, '')
        .replace(/\.astro$/, '')
        .toLowerCase();
}

for (const path in modules) {
    const key = normalizePath(path);
    componentMap[key] = (modules[path] as any).default;
}

let props = {};

if (Astro.request.method === "POST") {
    try {
        props = await Astro.request.json();
    } catch (err) {
        console.error("Failed to parse request body:", err);
    }
}

const path = Astro.params.path?.toLowerCase() || "";

const ComponentToRender = componentMap[path];
if (!ComponentToRender){
    return Astro.rewrite("/astro/404");
}
---

<ComponentToRender {...props} />